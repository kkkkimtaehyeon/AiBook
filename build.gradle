//plugins {
//	id 'java'
//	id 'org.springframework.boot' version '3.4.2'
//	id 'io.spring.dependency-management' version '1.1.7'
//}
//
//group = 'com.kth'
//version = '0.0.1-SNAPSHOT'
//
//java {
//	toolchain {
//		languageVersion = JavaLanguageVersion.of(21)
//	}
//}
//
//configurations {
//	compileOnly {
//		extendsFrom annotationProcessor
//	}
//}
//
//repositories {
//	mavenCentral()
//}
//
//ext {
//	set('springCloudVersion', "2024.0.0")
//}
//
//dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
//	//validation
//	implementation 'org.springframework.boot:spring-boot-starter-validation'
//	// jwt
//	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
//	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2', 'io.jsonwebtoken:jjwt-jackson:0.11.2'
//
//	// QueryDSL Implementation
//	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
//	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
//
//
//	compileOnly 'org.projectlombok:lombok'
//	runtimeOnly 'com.h2database:h2'
//	runtimeOnly 'com.mysql:mysql-connector-j'
//	annotationProcessor 'org.projectlombok:lombok'
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.security:spring-security-test'
//	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
//}
//
//dependencyManagement {
//	imports {
//		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//	}
//}
//
//tasks.named('test') {
//	useJUnitPlatform()
//}
//
///**
// * QueryDSL Build Options
// */
//def querydslDir = "src/main/generated"
//
//sourceSets {
//	main.java.srcDirs += [ querydslDir ]
//}
//
//tasks.withType(JavaCompile) {
//	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
//}
//
//clean.doLast {
//	file(querydslDir).deleteDir()
//}
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.kth'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.0") // 2024.0.0 -> 2023.0.1 변경
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign' // ✅ 이 부분 유지

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2', 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	// QueryDSL Implementation
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

/**
 * QueryDSL Build Options
 */
def querydslDir = "src/main/generated"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
	file(querydslDir).deleteDir()
}
